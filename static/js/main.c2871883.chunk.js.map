{"version":3,"sources":["Componenets/Side.js","Componenets/Main.js","App.js","index.js"],"names":["Side","notes","onAddNote","onDeleteNote","active","setActive","sotrNotes","sort","a","b","lastmodified","className","onClick","map","id","title","body","substr","Date","toLocaleDateString","hour","minute","Main","onUpdataNote","onEditeField","key","value","now","type","autoFocus","onChange","e","target","App","useState","localStorage","JSON","parse","getItem","setNote","useEffect","setItem","stringify","newNote","uuid","idToDelete","filter","note","find","updateNote","updataNoteArray","ReactDOM","render","document","getElementById"],"mappings":"8MA8CeA,MA5Cf,YAMG,IALCC,EAKF,EALEA,MACAC,EAIF,EAJEA,UACAC,EAGF,EAHEA,aACAC,EAEF,EAFEA,OACAC,EACF,EADEA,UAGMC,EAAYL,EAAMM,MAAK,SAACC,EAAEC,GAAH,OAASA,EAAEC,aAAeF,EAAEE,gBAEzD,OACI,mCACI,sBAAKC,UAAU,cAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,uCACA,wBAAQC,QAASV,EAAjB,oBAEJ,qBAAKS,UAAU,oBAAf,SAEQL,EAAUO,KAAI,SAACZ,GAAD,OACV,sBACAU,UAAS,2BAAsBV,EAAMa,KAAOV,GAAU,UACtDQ,QAAS,kBAAMP,EAAUJ,EAAMa,KAF/B,UAII,sBAAKH,UAAU,qBAAf,UACI,iCAASV,EAAMc,QACf,wBAAQH,QAAS,kBAAMT,EAAaF,EAAMa,KAA1C,uBAEJ,4BAAIb,EAAMe,MAAQf,EAAMe,KAAKC,OAAO,EAAG,IAAM,QAC7C,wBAAON,UAAU,YAAjB,2BAA4C,IACvC,IAAIO,KAAKjB,EAAMS,cAAcS,mBAAmB,QAAS,CACtDC,KAAM,UACNC,OAAQ,6B,sBCOjCC,MAtCf,YAAyC,IAAzBlB,EAAwB,EAAxBA,OAAQmB,EAAgB,EAAhBA,aAEdC,EAAe,SAACC,EAAKC,GAAW,IAAD,EACjCH,EAAa,2BACNnB,GADK,uBAEPqB,EAAMC,GAFC,6BAGMR,KAAKS,OAHX,MAOhB,OAAKvB,EAGD,mCACI,sBAAKO,UAAU,WAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,uBACIiB,KAAK,OACLF,MAAOtB,EAAOW,MACdD,GAAG,QACHe,WAAS,EACTC,SAAU,SAACC,GAAD,OAAOP,EAAa,QAASO,EAAEC,OAAON,UAEpD,0BACIZ,GAAG,OACHY,MAAOtB,EAAOY,KACdc,SAAU,SAACC,GAAD,OAAOP,EAAa,OAAQO,EAAEC,OAAON,aAGvD,sBAAKf,UAAU,wBAAf,UACI,oBAAIA,UAAU,gBAAd,SAA+BP,EAAOW,QACtC,cAAC,IAAD,CAAeJ,UAAU,mBAAzB,SAA6CP,EAAOY,eArBhD,qBAAKL,UAAU,iBAAf,+BCiDTsB,MAxDf,WAEE,MAAyBC,mBAASC,aAAalC,MAAQmC,KAAKC,MAAMF,aAAaG,QAAQ,UAAY,IAAnG,mBAAOrC,EAAP,KAAcsC,EAAd,KACA,EAA4BL,oBAAS,GAArC,mBAAO9B,EAAP,KAAeC,EAAf,KAuCA,OArCAmC,qBAAU,WACRL,aAAaM,QAAQ,QAASL,KAAKM,UAAUzC,MAC5C,CAACA,IAoCF,sBAAKU,UAAU,MAAf,UACE,cAAC,EAAD,CACEV,MAAOA,EACPC,UApCY,WAChB,IAAMyC,EAAU,CAEd7B,GAAI8B,MACJ7B,MAAO,gBACPC,KAAM,GACNN,aAAcQ,KAAKS,OAGrBY,EAAQ,CAACI,GAAF,mBAAc1C,MA4BjBE,aAzBe,SAAC0C,GACpBN,EAAQtC,EAAM6C,QAAO,SAACC,GAAD,OAAUA,EAAKjC,KAAO+B,OAyBvCzC,OAAQA,EACRC,UAAWA,IAEb,cAAC,EAAD,CAAMD,OAxBDH,EAAM+C,MAAK,SAACD,GAAD,OAAUA,EAAKjC,KAAOV,KAwBXmB,aArBV,SAAC0B,GACpB,IAAMC,EAAkBjD,EAAMY,KAAI,SAAAkC,GAChC,OAAGA,EAAKjC,KAAOV,EACN6C,EAEFF,KAGTR,EAAQW,UCvCZC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.c2871883.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Side({\r\n    notes,\r\n    onAddNote,\r\n    onDeleteNote,\r\n    active,\r\n    setActive\r\n}){ \r\n\r\n    const sotrNotes = notes.sort((a,b) => b.lastmodified - a.lastmodified);\r\n\r\n    return (\r\n        <>\r\n            <div className='app-sidebar'>\r\n                <div className='app-sidebar-header'>\r\n                    <h1>Notes</h1>\r\n                    <button onClick={onAddNote}>Add</button>\r\n                </div>\r\n                <div className='app-sidebar-notes'>\r\n                    {\r\n                        sotrNotes.map((notes) => (\r\n                            <div\r\n                            className={`app-sidebar-note ${notes.id === active && \"active\"}`}\r\n                            onClick={() => setActive(notes.id)}\r\n                            >\r\n                                <div className='sidebar-note-title'>\r\n                                    <strong>{notes.title}</strong>\r\n                                    <button onClick={() => onDeleteNote(notes.id)}>Delete</button>\r\n                                </div>\r\n                                <p>{notes.body && notes.body.substr(0, 30) + '...'}</p>\r\n                                <small className='note-meta'>Last modified {\" \"}\r\n                                    {new Date(notes.lastmodified).toLocaleDateString('en-GB', {\r\n                                        hour: '2-digit',\r\n                                        minute: '2-digit'\r\n                                    })}\r\n                                </small>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Side\r\n","import React from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nfunction Main({ active, onUpdataNote }) {\r\n\r\n    const onEditeField = (key, value) => {\r\n        onUpdataNote({\r\n            ...active,\r\n            [key]: value,\r\n            lastmodified: Date.now()\r\n        });\r\n    }\r\n\r\n    if (!active) return <div className='no-active-note'>No Note Selected</div>\r\n\r\n    return (\r\n        <>\r\n            <div className='app-main'>\r\n                <div className='app-main-note-edit'>\r\n                    <input\r\n                        type='text'\r\n                        value={active.title}\r\n                        id='title'\r\n                        autoFocus\r\n                        onChange={(e) => onEditeField(\"title\", e.target.value)}\r\n                    />\r\n                    <textarea\r\n                        id='body'\r\n                        value={active.body}\r\n                        onChange={(e) => onEditeField(\"body\", e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className='app-main-note-preview'>\r\n                    <h1 className='preview-title'>{active.title}</h1>\r\n                    <ReactMarkdown className='markdown-preview'>{active.body}</ReactMarkdown>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import './App.css';\nimport uuid from \"react-uuid\"\nimport { useState, useEffect } from 'react';\nimport Side from './Componenets/Side';\nimport Main from './Componenets/Main';\n\nfunction App() {\n\n  const [notes, setNote] = useState(localStorage.notes ? JSON.parse(localStorage.getItem(\"notes\")) : []);\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes))\n  }, [notes])\n\n\n  const onAddNote = () => {\n    const newNote = {\n\n      id: uuid(),\n      title: \"untitled note\",\n      body: \"\",\n      lastmodified: Date.now(),\n\n    };\n    setNote([newNote, ...notes]);\n  };\n\n  const onDeleteNote = (idToDelete) => {\n    setNote(notes.filter((note) => note.id !== idToDelete));\n  };\n\n  const getActive = () => {\n    return notes.find((note) => note.id === active);\n  }\n\n  const onUpdataNote = (updateNote) => {\n    const updataNoteArray = notes.map(note => {\n      if(note.id === active){\n        return updateNote;\n      }\n      return note;\n    })\n\n    setNote(updataNoteArray);\n  }\n\n\n  return (\n    <div className='App'>\n      <Side\n        notes={notes}\n        onAddNote={onAddNote}\n        onDeleteNote={onDeleteNote}\n        active={active}\n        setActive={setActive}\n      />\n      <Main active={getActive()} onUpdataNote={onUpdataNote} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}